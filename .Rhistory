i.men, "; ",
i.other)) %>%
# delete vestigial
select(-c(t.sd.age, t.men, t.other,
i.sd.age, i.men, i.other))
kbl(desc,
col.names = c("country",
"n",
"age M(SD)",
"proportion of women; men; other",
"used approved device",
"passed attention check",
"reported compliance",
"reported pose similarity",
"rated as not distracted",
"rated as unaware",
"n",
"age M(SD)",
"proportion of women; men; other")) %>%
add_header_above(c(" " = 1,
"total sample" = 3,
"inclusion criteria pass rate" = 6,
"primary analysis sample" = 3)) %>%
kable_paper()
?render
# Chunk 1
######################
## Setup R environment
######################
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'kableExtra')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
######################
## Open data
######################
DF.w <- readRDS("data/DF.w.rds")
######################
## Calculate descriptives
######################
# descriptives for full sample
desc.1 <- DF.w %>%
group_by(country) %>%
summarise(t.n = n(),
t.m.age = mean(indiv_agee_var,
na.rm = T),
t.sd.age = sd(indiv_agee_var,
na.rm = T),
t.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
t.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
t.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
# descriptives for subset that met inclusion criteria
desc.2 <- DF.w %>%
filter(inc == 1,
inc.awa == 1) %>%
group_by(country) %>%
summarise(i.n = n(),
i.m.age = mean(indiv_agee_var,
na.rm = T),
i.sd.age = sd(indiv_agee_var,
na.rm = T),
i.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
i.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
i.other = sum(indiv_gend_var == 3, na.rm = T) / n()
)
# merge descriptives
desc = full_join(desc.1, desc.2, by = 'country')
rm(desc.1, desc.2)
######################
## Clean table
######################
desc <- desc %>%
# round values
mutate_if(is.numeric,
funs(round(x = .,
digits = 2)
)
) %>%
# create age text
mutate(t.m.age = paste0(t.m.age,
" (", t.sd.age, ")"),
i.m.age = paste0(i.m.age,
" (", i.sd.age, ")")
) %>%
# create gender text
mutate(t.women = paste0(t.women, "; ",
t.men, "; ",
t.other),
i.women = paste0(i.women, "; ",
i.men, "; ",
i.other)) %>%
# delete vestigial
select(-c(t.sd.age, t.men, t.other,
i.sd.age, i.men, i.other))
?kbl
kbl(desc,
col.names = c("country",
"n",
"age M(SD)",
"proportion of women; men; other",
"used approved device",
"passed attention check",
"reported compliance",
"reported pose similarity",
"rated as not distracted",
"rated as unaware",
"n",
"age M(SD)",
"proportion of women; men; other"),
caption = "") %>%
add_header_above(c(" " = 1,
"total sample" = 3,
"inclusion criteria pass rate" = 6,
"primary analysis sample" = 3)) %>%
kable_paper()
kbl(desc,
col.names = c("country",
"n",
"age M(SD)",
"proportion of women; men; other",
"used approved device",
"passed attention check",
"reported compliance",
"reported pose similarity",
"rated as not distracted",
"rated as unaware",
"n",
"age M(SD)",
"proportion of women; men; other"),
caption = "Country-specific sample characteristics. For both the total sample and primary analysis sample, the table denotes the number of participants, age mean and standard deviation, and the proportion of participants who identified as women, men, or some other response option (e.g., gender non-conforming). Table also denotes the proportion of the total sample that (a) completed the study on an approved device, (b) passed all attention checks, (c) reporting at least some compliance with the task, (d) reported that the posed expression was at least somewhat similar to an actor succesfull completing the task, (e) was rated as not distracted, and (f) was reported as completely unaware of the purpose of the study.") %>%
add_header_above(c(" " = 1,
"total sample" = 3,
"inclusion criteria pass rate" = 6,
"primary analysis sample" = 3)) %>%
kable_paper()
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'lme4',
'lmerTest', 'emmeans', 'metafor',
'ggtext')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/DF.w.rds")
DF.l.full <- readRDS("data/DF.l.full.rds")
DF.l <- readRDS("data/DF.l.rds")
DF.l.inc <- readRDS("data/DF.l.inc.rds")
# Chunk 3
# descriptives for full sample
desc.1 <- DF.w %>%
group_by(country) %>%
summarise(t.n = n(),
t.m.age = mean(indiv_agee_var,
na.rm = T),
t.sd.age = sd(indiv_agee_var,
na.rm = T),
t.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
t.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
t.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dev = mean(inc.dev),
inc.awa = sum(inc.awa, na.rm = T) / n(),
inc.dis = sum(inc.dis, na.rm = T) / n()
)
# descriptives for subset that met inclusion criteria
desc.2 <- DF.w %>%
filter(inc == 1,
inc.awa == 1) %>%
group_by(country) %>%
summarise(i.n = n(),
i.m.age = mean(indiv_agee_var,
na.rm = T),
i.sd.age = sd(indiv_agee_var,
na.rm = T),
i.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
i.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
i.other = sum(indiv_gend_var == 3, na.rm = T) / n()
)
# merge descriptives
desc = full_join(desc.1, desc.2, by = 'country')
rm(desc.1, desc.2)
# clean table
desc <- desc %>%
# round values
mutate_if(is.numeric,
funs(round(x = .,
digits = 2)
)
) %>%
# create age text
mutate(t.m.age = paste0(t.m.age,
" (", t.sd.age, ")"),
i.m.age = paste0(i.m.age,
" (", i.m.age, ")")
) %>%
# create gender text
mutate(t.women = paste0(t.women, "; ",
t.men, "; ",
t.other),
i.women = paste0(i.women, "; ",
i.men, "; ",
i.other)) %>%
# delete vestigial
select(-c(t.sd.age, t.men, t.other,
i.sd.age, i.men, i.other))
# export table
write.csv(desc, "desc.csv")
# Chunk 4
# n participants
DF.w %>% nrow()
# n labs
DF.l$lab %>% unique() %>% length()
# n countries
DF.l$lab %>%
substr(start = 1,
stop = 3) %>%
unique() %>%
length()
# condition n
table(DF.l$condition) %>% prop.table()
table(DF.l$condition, DF.l$image) %>% prop.table()
# gender
table(DF.l$indiv_gend_var) %>% prop.table()
# age
DF.w %>%
summarise(m = mean(indiv_agee_var,
na.rm = T),
sd = sd(indiv_agee_var,
na.rm = T))
# inclusion criteria
DF.w %>%
summarise(n = n(),
m.age = mean(indiv_agee_var,
na.rm = T),
sd.age = sd(indiv_agee_var,
na.rm = T),
g.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
g.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
g.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
table(DF.l$indiv_gend_var) %>% prop.table()
DF.l$lab %>%
substr(start = 1,
stop = 3) %>%
unique() %>%
length()
DF.w %>%
summarise(n = n(),
m.age = mean(indiv_agee_var,
na.rm = T),
sd.age = sd(indiv_agee_var,
na.rm = T),
g.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
g.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
g.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'lme4',
'lmerTest', 'emmeans', 'metafor',
'ggtext')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/DF.w.rds")
DF.l.full <- readRDS("data/DF.l.full.rds")
DF.l <- readRDS("data/DF.l.rds")
DF.l.inc <- readRDS("data/DF.l.inc.rds")
# Chunk 3
# descriptives for full sample
desc.1 <- DF.w %>%
group_by(country) %>%
summarise(t.n = n(),
t.m.age = mean(indiv_agee_var,
na.rm = T),
t.sd.age = sd(indiv_agee_var,
na.rm = T),
t.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
t.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
t.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dev = mean(inc.dev),
inc.awa = sum(inc.awa, na.rm = T) / n(),
inc.dis = sum(inc.dis, na.rm = T) / n()
)
# descriptives for subset that met inclusion criteria
desc.2 <- DF.w %>%
filter(inc == 1,
inc.awa == 1) %>%
group_by(country) %>%
summarise(i.n = n(),
i.m.age = mean(indiv_agee_var,
na.rm = T),
i.sd.age = sd(indiv_agee_var,
na.rm = T),
i.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
i.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
i.other = sum(indiv_gend_var == 3, na.rm = T) / n()
)
# merge descriptives
desc = full_join(desc.1, desc.2, by = 'country')
rm(desc.1, desc.2)
# clean table
desc <- desc %>%
# round values
mutate_if(is.numeric,
funs(round(x = .,
digits = 2)
)
) %>%
# create age text
mutate(t.m.age = paste0(t.m.age,
" (", t.sd.age, ")"),
i.m.age = paste0(i.m.age,
" (", i.m.age, ")")
) %>%
# create gender text
mutate(t.women = paste0(t.women, "; ",
t.men, "; ",
t.other),
i.women = paste0(i.women, "; ",
i.men, "; ",
i.other)) %>%
# delete vestigial
select(-c(t.sd.age, t.men, t.other,
i.sd.age, i.men, i.other))
# export table
write.csv(desc, "desc.csv")
# Chunk 4
# n participants
DF.w %>% nrow()
# n labs
DF.l$lab %>% unique() %>% length()
# n countries
DF.l$lab %>%
substr(start = 1,
stop = 3) %>%
unique() %>%
length()
# condition n
table(DF.l$condition) %>% prop.table()
table(DF.l$condition, DF.l$image) %>% prop.table()
# inclusion criteria
DF.w %>%
summarise(n = n(),
m.age = mean(indiv_agee_var,
na.rm = T),
sd.age = sd(indiv_agee_var,
na.rm = T),
g.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
g.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
g.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
# Chunk 5
models <- list()
emmeans(models[["primary"]][["prereg.min"]]
pairwise ~ image | condition,
adjust = "none")
emmeans(models[["primary"]][["prereg.min"]],
pairwise ~ image | condition,
adjust = "none")
# fit model
models[["primary"]][["prereg.min"]] <-
lmer(happiness ~ trial * condition * image +
(1 | ResponseId) +
(1 | lab),
data = DF.l.inc)
# inspect results
summary(models[["primary"]][["prereg.min"]])
anova(models[["primary"]][["prereg.min"]])
joint_tests(models[["primary"]][["prereg.min"]],
by = "condition",
lmerTest.limit = 9999)
joint_tests(models[["primary"]][["prereg.min"]],
by = c("image", "condition"),
lmerTest.limit = 9999)
emmeans(models[["primary"]][["prereg.min"]],
pairwise ~ image | condition,
adjust = "none")
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'lme4',
'lmerTest', 'emmeans', 'metafor',
'ggtext')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
