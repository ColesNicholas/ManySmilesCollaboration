(.31 / (7-1)) * 100 #  effect size
emmeans(models[["primary"]][["prereg"]],
pairwise ~ trial | condition,
adjust = "none")
(.49 / (7-1)) * 100 #  mimicry pose effect size
(.40 / (7-1)) * 100 #  directd pose effect size
(.04 / (7-1)) * 100 #  pentask pose effect size
tmp.DF <- DF.l.full.inc %>%
filter(trial != "neutr") %>%
mutate(trial.r = if_else(condition = trial == "happy",
true = "happy",
false = "filler")
) %>%
mutate(trial.r = factor(trial.r))
summary(models[["secondary"]][["alt.exp"]])
emmeans(models[["secondary"]][["alt.exp"]],
pairwise ~ trial.r | condition,
at = list(image = "absentt"),
adjust = "none",
lmerTest.limit = 4512)
(.48 / (7-1)) * 100 #  mimicry pose effect size
(.20 / (7-1)) * 100 #  directd pose effect size
(.15 / (7-1)) * 100 #  pentask pose effect size
emmeans(models[["secondary"]][["compl.diff"]],
pairwise ~ condition,
adjust = "none",
pbkrtest.limit = 3878)
anova(models[["secondary"]][["compl.diff"]])
emmeans(models[["secondary"]][["compl.diff"]],
pairwise ~ image,
adjust = "none",
pbkrtest.limit = 3878)
(.03 / (7-1)) * 100 #  image effect size
emmeans(models[["secondary"]][["compl.diff"]],
pairwise ~ condition,
adjust = "none",
pbkrtest.limit = 3878)
(.03 / (7-1)) * 100 #  image effect size
(.15 / (7-1)) * 100 #  mimicry - directd effect size
(.25 / (7-1)) * 100 #  mimicry - pen effect size
(.10 / (7-1)) * 100 #  directd - pen effect size
emmeans(models[["secondary"]][["simil.diff"]],
pairwise ~ image,
adjust = "none",
lmerTest.limit = 3878)
(.12 / (7-1)) * 100 #  image effect size
emmeans(models[["secondary"]][["simil.diff"]],
pairwise ~ condition,
adjust = "none",
lmerTest.limit = 3878)
(.23 / (7-1)) * 100 #  mimicry - directd effect size
(.25 / (7-1)) * 100 #  mimicry - pen effect size
(.24 / (7-1)) * 100 #  mimicry - pen effect size
emmeans(models[["secondary"]][["gen.diff"]],
pairwise ~ condition,
adjust = "none",
lmerTest.limit = 3878)
(1.15 / (7-1)) * 100 #  mimicry - pen effect size
(.89 / (7-1)) * 100 #  directd - pen effect size
(.26 / (7-1)) * 100 #  mimicry - directd effect size
emmeans(models[["secondary"]][["gen.diff"]],
pairwise ~ image,
adjust = "none",
lmerTest.limit = 3878)
(.23 / (7-1)) * 100 # image effect size
anova(models[["secondary"]][["anxiety"]])
emmeans(models[["secondary"]][["anxiety"]],
pairwise ~ trial,
adjust = "none",
lmerTest.limit = 3008)
(.01 / (7-1)) * 100 #  pose effect size
emmeans(models[["secondary"]][["anger"]],
pairwise ~ trial,
adjust = "none",
lmerTest.limit = 3008)
(.02 / (7-1)) * 100 #  pose effect size
emmeans(models[["secondary"]][["anxiety"]],
pairwise ~ condition,
adjust = "none",
lmerTest.limit = 3008)
(.13 / (7-1)) * 100 #  pose effect size
(.17 / (7-1)) * 100 #  directd vs. pen
emmeans(models[["secondary"]][["anger"]],
pairwise ~ condition,
adjust = "none",
lmerTest.limit = 3008)
(.14 / (7-1)) * 100 #  mimicry vs. pen
(.12 / (7-1)) * 100 #  directd vs. pen
joint_tests(models[["primary"]][["prereg.noRS"]],
by = "condition",
lmerTest.limit = 9999)
emmeans(models[["primary"]][["prereg.noRS"]],
pairwise ~ trial | condition,
adjust = "none")
(.08 / (7-1)) * 100 #  pen pose effect
emmeans(models[["exploratory"]][["primary.noexc"]],
pairwise ~ trial | condition,
adjust = "none")
(.14 / (7-1)) * 100 #  pen pose effect
emmeans(models[["exploratory"]][["no.anx"]],
pairwise ~ trial | condition,
adjust = "none")
(.53 / (7-1)) * 100 #  mimicry pose effect
(.10 / (7-1)) * 100 #  pen pose effect
DF.l.inc$condition %>% unique()
tmp.DF <- DF.l.inc %>%
filter(condition != "pentask")
tmp <-
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = tmp.DF)
library(sjstats)
tmp %>% r2()
tmp %>% performance::r2()
tmp <-
lmer(happiness ~ image +
(1 | lab) + (1 | ResponseId),
data = tmp.DF)
tmp %>% performance::r2()
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc)
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc) %>%
performance::r2
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc) %>%
performance::r2()
tmp.DF <- DF.l.inc %>%
filter(condition != "pentask")
lmer(happiness ~ image +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc,
subset = condition != "pentask")
lmer(happiness ~ image +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc,
subset = condition != "pentask") %>%
performance::r2()
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc,
subset = condition != "pentask") %>%
performance::r2()
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc) %>%
performance::r2()
lmer(happiness ~ trial +
(1 | lab) + (1 | ResponseId),
data = DF.l.inc,
subset = condition != "pentask") %>%
performance::r2()
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(#id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
# calculate proportion of positive effect participants in each group
desc <- DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100) %>%
mutate(prop = paste0(prop, "%"))
# plot
png(filename = "output/figures/SuppFigure3.png",
units = "in",
width = 7,
height = 4,
res = 300)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3,
y = 1.8,
size = 3) +
labs(x = "difference in self-reported happiness between happy and neutral facial expression poses")
dev.off()
rm(DF.s3, desc)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(#id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
# calculate proportion of positive effect participants in each group
desc <- DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100) %>%
mutate(prop = paste0(prop, "%"))
# plot
png(filename = "output/figures/SuppFigure3.png",
units = "in",
width = 7,
height = 4,
res = 300)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -2.5,
y = 1.8,
size = 2.5) +
labs(x = "difference in self-reported happiness between happy and neutral facial expression poses")
dev.off()
rm(DF.s3, desc)
?rnorm
a <- rnorm(x = 10000)
b <- rnorm(x = 10000)
rbind(a, b)
a <- rnorm(n = 10000)
b <- rnorm(n = 10000)
rbind(a, b)
tmp <- rbind(a, b) %>%
mutate(c = a - b)
tmp <- rbind(a, b)
tmp <- rbind(a, b) %>%
as.data.frame() %>%
mutate(c = a - b
)
tmp <- cbind(a, b) %>%
as.data.frame() %>%
mutate(c = a - b)
View(tmp)
hist(c)
hist(tmp$c)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(#id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
# calculate proportion of positive effect participants in each group
desc <- DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100) %>%
mutate(prop = paste0(prop, "%"))
# plot
png(filename = "output/figures/SuppFigure3.png",
units = "in",
width = 7,
height = 4,
res = 300)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -2.5,
y = 1.8,
size = 2.5) +
labs(x = "happiness difference score")
dev.off()
rm(DF.s3, desc)
