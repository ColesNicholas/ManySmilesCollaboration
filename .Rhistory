tmp %>% names()
m <- lmer(happiness ~ trial.n * qulty_rate_var.c +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_rate_var.c)
m <- lmer(happiness ~ trial.n * qulty_rate_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_rate_var.c)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_rate_var)
m <- lmer(happiness ~ trial.n * qulty_smlr_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_smlr_var)
m <- lmer(happiness ~ trial.n * qulty_feel_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_feel_var)
f2.DF <- DF.l %>%
# select relevant variables
select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var")),
qual.ind = recode(qual.ind,
qulty_rate_var = "compliance",
qulty_feel_var = "genuineness",
qulty_smlr_var = "similarity")
)
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var")),
qual.ind = recode(qual.ind,
qulty_rate_var = "compliance",
qulty_feel_var = "genuineness",
qulty_smlr_var = "similarity")
)
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var)
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind")
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy")
View(f2.DF)
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var")),
qual.ind = recode(qual.ind,
qulty_rate_var = "compliance",
qulty_feel_var = "genuineness",
qulty_smlr_var = "similarity")
)
?mutate
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var"))
)
?recode
f2.DF <- DF.l %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var")),
qual.ind = dplyr::recode(qual.ind,
qulty_rate_var = "compliance",
qulty_feel_var = "genuineness",
qulty_smlr_var = "similarity")
)
View(f2.DF)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y")
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60")
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
# add bin-specific percentage counts to histogram
stat_bin(aes(y = stat(width*density),
label =
paste0((round(stat(width*density),
2) * 100),
"%")),
geom = "text",
bins = 7,
size = 2,
vjust = -.21)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60")
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(bins = 7,
fill = "gray60")
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60")
f2.DF$cutoff <- NA
f2.DF$sig.cross <- NA
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_rate_var)
tmp <- DF.l %>%
mutate(trial.n = as.numeric(trial) - 1)
m <- lmer(happiness ~ trial.n * qulty_rate_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_rate_var)
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross = 4.17
f2.DF$sig.cross <- NA
View(f2.DF)
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross <- 4.17
# add sig cutoffs
f2.DF <- as.dataframe(f2.DF)
f2.DF$sig.cross <- NA
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross <- 4.17
f2.DF <- as.data.frame(f2.DF)
f2.DF$sig.cross <- NA
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross <- 4.17
m <- lmer(happiness ~ trial.n * qulty_smlr_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_smlr_var)
m <- lmer(happiness ~ trial.n * qulty_feel_var +
(1 | ResponseId) +
(1 | lab),
data = tmp)
summary(m)
johnson_neyman(model = m,
pred = trial.n,
modx = qulty_feel_var)
f2.DF <- as.data.frame(f2.DF)
f2.DF$sig.cross <- NA
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross <- 4.17
f2.DF[f2.DF$qual.ind == "similarity", ]$sig.cross <- 1.73
f2.DF[f2.DF$qual.ind == "genuineness", ]$sig.cross <- 1.69
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross - .25,
xmax = 7.25,
ymin = -6,
ymax = 6),
fill = "lightgreen",
alpha = .01)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross - .25,
xmax = 7.25,
#ymin = -6,
#ymax = 6
),
fill = "lightgreen",
alpha = .01)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60")
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross - .25,
xmax = 7.25,
ymin = 0,
ymax = .75
),
fill = "lightgreen",
alpha = .01)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross - .25,
xmax = 7.25,
ymin = 0,
ymax = .8
),
fill = "lightgreen",
alpha = .01)
f2.DF$qual.ind %>% max()\
f2.DF$qual.ind %>% max()
f2.DF$value %>% max()
f2.DF$value %>% max(na.rm = T)
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross - .25,
xmax = 7.25,
ymin = 0,
ymax = .8
),
fill = "lightgreen",
alpha = .01) +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross,
xmax = 7,
ymin = 0,
ymax = .8
),
fill = "lightgreen",
alpha = .01) +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
tmp <- DF.l.inc %>%
filter(genuineness > 1)
tmp <- DF.l.inc %>%
dplyr::filter(genuineness > 1)
tmp <- DF.l.inc %>%
filter(qulty_feel_var > 1)
m <-
lmer(happiness ~ trial * condition * image +
(1 | lab) + (1 | ResponseId),
data = tmp)
summary(m)
anova(m)
joint_tests(m,
by = "condition",
lmerTest.limit = 9999)
tmp <- DF.l.inc %>%
filter(qulty_feel_var > 2)
m <-
lmer(happiness ~ trial * condition * image +
(1 | lab) + (1 | ResponseId),
data = tmp)
# inspect results
summary(m)
anova(m)
joint_tests(m,
by = "condition",
lmerTest.limit = 9999)
tmp <- DF.l.inc %>%
filter(qulty_feel_var > 3)
m <-
lmer(happiness ~ trial * condition * image +
(1 | lab) + (1 | ResponseId),
data = tmp)
# inspect results
summary(m)
anova(m)
joint_tests(m,
by = "condition",
lmerTest.limit = 9999)
tmp <- DF.l.inc %>%
filter(qulty_feel_var > 4)
m <-
lmer(happiness ~ trial * condition * image +
(1 | lab) + (1 | ResponseId),
data = tmp)
# inspect results
summary(m)
anova(m)
joint_tests(m,
by = "condition",
lmerTest.limit = 9999)
tmp <- DF.l.inc %>%
filter(qulty_feel_var > 5)
m <-
lmer(happiness ~ trial * condition * image +
(1 | lab) + (1 | ResponseId),
data = tmp)
# inspect results
summary(m)
anova(m)
joint_tests(m,
by = "condition",
lmerTest.limit = 9999)
f2.DF <- DF.l.inc %>%
# select relevant variables
dplyr::select(ResponseId, trial, condition,
qulty_rate_var, qulty_feel_var, qulty_smlr_var) %>%
# pivot longer so that there is one row for each moderator
pivot_longer(cols = c(qulty_rate_var,
qulty_smlr_var,
qulty_feel_var),
names_to = "qual.ind") %>%
# delete duplicate set of observations in the neutral trial
filter(trial == "happy") %>%
# relevel factors
mutate(qual.ind = factor(qual.ind,
levels = c("qulty_rate_var",
"qulty_feel_var",
"qulty_smlr_var")),
qual.ind = dplyr::recode(qual.ind,
qulty_rate_var = "compliance",
qulty_feel_var = "genuineness",
qulty_smlr_var = "similarity")
)
# add sig cutoffs
f2.DF <- as.data.frame(f2.DF)
f2.DF$sig.cross <- NA
f2.DF[f2.DF$qual.ind == "compliance", ]$sig.cross <- 4.17
f2.DF[f2.DF$qual.ind == "similarity", ]$sig.cross <- 1.73
f2.DF[f2.DF$qual.ind == "genuineness", ]$sig.cross <- 1.69
ggplot(f2.DF,
aes(x = value)) +
# split plot by condition and moderator
facet_grid(cols = vars(condition),
rows = vars(qual.ind),
scales = "free_y") +
# plot histogram (as percentage)
geom_histogram(aes(y = stat(width*density)),
bins = 7,
fill = "gray60") +
#
geom_rect(aes(xmin = sig.cross,
xmax = 7,
ymin = 0,
ymax = .8
),
fill = "lightgreen",
alpha = .01) +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
