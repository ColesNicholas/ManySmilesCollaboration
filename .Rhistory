strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
DF.w$inc %>% unique()
?pivot_wider
DF.l.inc %>% names()
DF.s3 <- DF.l.inc %>%
select(ResponseId, lab,
trial, happiness) %>%
pivot_wider(id_cols = ResponseId,
names_from = trial,
values_from = happiness)
DF.l.inc$ResponseId %>% unique()
DF.l.inc$ResponseId %>% unique() %>% count()
DF.l.inc$ResponseId %>% unique() %>% nrow()
DF.l.inc$ResponseId %>% unique() %>% length()
View(DF.s3)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
trial, happiness) %>%
# pivot wider
pivot_wider(id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral) %>%
ungroup()
hist(DF.s3$happ.diff)
ggplot(data = DF.s3,
aes(y = happ.diff)) +
geom_histogram()
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_histogram()
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_histogram(bins = 20)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density()
?if_else
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
trial, happiness) %>%
# pivot wider
pivot_wider(id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
DF.s3$eff %>% mean()
View(DF.s3)
DF.l.inc %>% names()
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
table(DF.s3$eff, DF.s3$condition)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
table(DF.s3$eff, DF.s3$condition)
View(DF.s3)
?pivot_wider
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(#id_cols = ResponseId,
names_from = trial,
values_from = happiness)
View(DF.s3)
DF.s3 <- DF.l.inc %>%
# select relevant variables
select(ResponseId, lab,
condition,
trial, happiness) %>%
# pivot wider
pivot_wider(#id_cols = ResponseId,
names_from = trial,
values_from = happiness) %>%
# compute difference score
rowwise() %>%
mutate(happ.diff = happy - neutral,
eff = if_else(condition = happ.diff > 0,
true = 1,
false = 0)) %>%
ungroup()
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density()
geom_histogram(bins = 20)
table(DF.s3$eff, DF.s3$condition)
table(DF.s3$eff, DF.s3$condition) %>%
prop.table()
251/(251 +226)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(condition)
DF.s3 %>% names()
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition))
?geom_density
DF.s3 %>%
group_by(condition) %>%
summarise(mean(happ.diff))
DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100)
DF.s3 %>% filter(condition == "pen in mouth")
DF.s3 %>% filter(condition == "pen-in-mouth")
DF.s3 %>% filter(condition == "pen-in-mouth") %>% View()
desc <- DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100)
desc
desc <- DF.s3 %>%
group_by(condition) %>%
summarise(prop = round(mean(happ.diff),2) * 100) %>%
mutate(prop = paste0(prop, "%"))
desc
tmp <-
outer_join(DF.s3, desc)
?merge
tmp <-
merge(DF.s3, desc)
View(tmp)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition))
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
labs(x = "tmp")
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
labs(x = "difference in self-reported happiness between happy and neutral facial expression poses")
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -2.5,
y = 1.5,
size = 3,
hjust = 0,
vjust = 1.25)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -3,
y = 2,
size = 3,
hjust = 0,
vjust = 1.25)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -3,
y = 2,
size = 3,
hjust = 0)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -3,
y = 1.7,
size = 3,
hjust = 0)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -3.25,
y = 1.75,
size = 3,
hjust = 0)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label = prop),
x = -3.5,
y = 1.75,
size = 3,
hjust = 0)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3.5,
y = 1.75,
size = 3,
hjust = 0)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -4,
y = 1.8,
size = 3)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3.6,
y = 1.8,
size = 3)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3.5,
y = 1.8,
size = 3)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3.4,
y = 1.8,
size = 3)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3.25,
y = 1.8,
size = 3)
y = 1.8,
size = 3)
ggplot(data = DF.s3,
aes(x = happ.diff)) +
geom_density() +
facet_wrap(vars(condition)) +
geom_text(data = desc,
aes(label =
paste0(prop,
" positive scores")),
x = -3,
y = 1.8,
size = 3)
