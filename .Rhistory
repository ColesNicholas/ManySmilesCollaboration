# descriptives
DF.w %>%
summarise(n = n(),
m.age = mean(indiv_agee_var,
na.rm = T),
sd.age = sd(indiv_agee_var,
na.rm = T),
g.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
g.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
g.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
# n participants who met inclusion criteria
DF.l.inc$ResponseId %>% unique() %>% length()
models <- readRDS("output/analyses/freq.models.Rds")
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr', "gridExtra")
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
DF.3 <- DF.l %>%
# select relevant variables
select(ResponseId, trial, condition,
happiness,
awareness, qulty_rate_var,
qulty_feel_var, qulty_smlr_var,
indiv_body) %>%
# calculate a difference score between the happy and neutral poses
pivot_wider(names_from = trial,
values_from = happiness) %>%
rowwise() %>%
mutate(happ.diff = happy - neutral) %>%
ungroup() %>%
select(-c(happy, neutral))
# plot
f1 <- ggplot(DF.3,
aes(x = qulty_rate_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("compliance") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f2 <- ggplot(DF.3,
aes(x = qulty_smlr_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("similarity")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f3 <- ggplot(DF.3,
aes(x = qulty_feel_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("genuineness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f4 <- ggplot(DF.3,
aes(x = awareness,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("hypothesis awareness") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f5 <- ggplot(DF.3,
aes(x = indiv_body,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("body awareness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
grid.arrange(f1, f2, f3, f4, f5,
nrow = 2)
DF.3 <- DF.l %>%
# select relevant variables
select(ResponseId, trial, condition,
happiness,
awareness, qulty_rate_var,
qulty_feel_var, qulty_smlr_var,
indiv_body) %>%
# calculate a difference score between the happy and neutral poses
pivot_wider(names_from = trial,
values_from = happiness) %>%
rowwise() %>%
mutate(happ.diff = happy - neutral) %>%
ungroup() %>%
select(-c(happy, neutral))
# prepare plots
f1 <- ggplot(DF.3,
aes(x = qulty_rate_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("compliance") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f2 <- ggplot(DF.3,
aes(x = qulty_smlr_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("similarity")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f3 <- ggplot(DF.3,
aes(x = qulty_feel_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("genuineness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f4 <- ggplot(DF.3,
aes(x = awareness,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("hypothesis awareness") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f5 <- ggplot(DF.3,
aes(x = indiv_body,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("body awareness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
# plot
png(filename = "output/figures/Figure3.png",
units = "in",
width = 7,
height = 4,
res = 300)
grid.arrange(f1, f2, f3, f4, f5,
nrow = 2)
dev.off()
rm(f1, f2, f3, f4, f5, DF.3)
DF.3 <- DF.l %>%
# select relevant variables
select(ResponseId, trial, condition,
happiness,
awareness, qulty_rate_var,
qulty_feel_var, qulty_smlr_var,
indiv_body) %>%
# calculate a difference score between the happy and neutral poses
pivot_wider(names_from = trial,
values_from = happiness) %>%
rowwise() %>%
mutate(happ.diff = happy - neutral) %>%
ungroup() %>%
select(-c(happy, neutral))
# prepare plots
f1 <- ggplot(DF.3,
aes(x = qulty_rate_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("compliance") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f2 <- ggplot(DF.3,
aes(x = qulty_smlr_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("similarity")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f3 <- ggplot(DF.3,
aes(x = qulty_feel_var,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("genuineness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f4 <- ggplot(DF.3,
aes(x = awareness,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
xlab("hypothesis awareness") +
ylab("change in happiness") +
scale_x_continuous(
breaks = c(1, 3, 5, 7))
f5 <- ggplot(DF.3,
aes(x = indiv_body,
y = happ.diff))  +
geom_jitter(width = .1,
alpha = .2,
colour = "dark grey") +
geom_smooth(method = 'lm') +
theme(axis.title.y = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("body awareness")+
scale_x_continuous(
breaks = c(1, 3, 5, 7))
# plot
png(filename = "output/figures/Figure3.png",
units = "in",
width = 7,
height = 6,
res = 300)
grid.arrange(f1, f2, f3, f4, f5,
nrow = 2)
dev.off()
rm(f1, f2, f3, f4, f5, DF.3)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'lme4',
'lmerTest', 'emmeans', 'metafor',
'ggtext')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l.full.inc <- readRDS("data/processed/DF.l.full.inc.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'lme4',
'lmerTest', 'emmeans', 'metafor',
'ggtext')
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35"),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none"
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l.full.inc <- readRDS("data/processed/DF.l.full.inc.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
# n participants
DF.w %>% nrow()
# n labs
DF.l$lab %>% unique() %>% length()
# n countries
DF.l$lab %>%
substr(start = 1,
stop = 3) %>%
unique() %>%
length()
# condition n
table(DF.l$condition) %>% prop.table()
table(DF.l$condition, DF.l$image) %>% prop.table()
# descriptives
DF.w %>%
summarise(n = n(),
m.age = mean(indiv_agee_var,
na.rm = T),
sd.age = sd(indiv_agee_var,
na.rm = T),
g.women = sum(indiv_gend_var == 1, na.rm = T) / n(),
g.men = sum(indiv_gend_var == 2, na.rm = T) / n(),
g.other = sum(indiv_gend_var == 3, na.rm = T) / n(),
# inclusion criteria pass rate
inc.dev = mean(inc.dev),
inc.att = mean(inc.att),
inc.fol = mean(inc.fol),
inc.mat = mean(inc.mat),
inc.dis = sum(inc.dis, na.rm = T) / n(),
inc.awa = sum(inc.awa, na.rm = T) / n()
)
# n participants who met inclusion criteria
DF.l.inc$ResponseId %>% unique() %>% length()
models <- readRDS("output/analyses/freq.models.Rds")
emmeans(models[["secondary"]][["awareness.diff"]],
pairwise ~ condition,
adjust = "none")
anova(models[["secondary"]][["awareness.diff"]])
emmeans(models[["secondary"]][["awareness.diff"]],
pairwise ~ condition,
adjust = "none")
emmeans(models[["secondary"]][["awareness.diff"]],
pairwise ~ condition,
adjust = "none",
lmerTest.limit = 4512)
(0.48 / (7-1)) * 100
(0.481 / (7-1)) * 100 # pen - directd
(0.212 / (7-1)) * 100
(0.212  / (7-1)) * 100 # directd - mimicry
(0.269 / (7-1)) * 100 # pen - mimicry
