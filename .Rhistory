axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
ggplot() +
layer_spatial(data = msworld,
aes(fill = n),
color = NA)+
coord_sf(crs = 'ESRI:54030') +
scale_fill_gradient(low = '#D0CECE',
high = "#820000") +
cowplot::theme_minimal_grid() +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = 5),
legend.key.width= unit(1.55, 'cm'),
legend.key.height= unit(.1, 'cm'),
legend.margin = margin(b = -10),
legend.justification = "center",
axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
# plot data
pdf(file = "output/figures/Figure1.pdf",
width = 3.46,
height = 3.46)
ggplot() +
layer_spatial(data = msworld,
aes(fill = n),
color = NA)+
coord_sf(crs = 'ESRI:54030') +
scale_fill_gradient(low = '#D0CECE',
high = "#820000") +
cowplot::theme_minimal_grid() +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = 5),
legend.key.width= unit(1.55, 'cm'),
legend.key.height= unit(.1, 'cm'),
legend.margin = margin(b = -10),
legend.justification = "center",
axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
dev.off()
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr', "gridExtra",
"sf", "rnaturalearth", "rnaturalearthdata",
"ggspatial"
)
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35",
size = .35),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none",
axis.title = element_text(size = 6),
axis.text = element_text(size = 5),
axis.line = element_line(size = .25),
axis.ticks = element_line(size = .25),
strip.text.x = element_text(size = 5),
strip.text.y = element_text(size = 5)
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 6
# download world data
world <- ne_countries(scale = "medium",
returnclass = "sf")
# download msc country data
msc <- read.csv("data/country.n.csv")[, 2:3] %>%
arrange(n) %>%
rename(iso_a3 = country)
# merge datasets
msworld <- left_join(world, msc,
by = 'iso_a3') %>%
mutate(n = ifelse(is.na(n),
0,
n)) %>%
arrange(-n)
# plot data
pdf(file = "output/figures/Figure1.pdf",
width = 3.46,
height = 3.46)
ggplot() +
layer_spatial(data = msworld,
aes(fill = n),
color = NA)+
coord_sf(crs = 'ESRI:54030') +
scale_fill_gradient(low = '#D0CECE',
high = "#820000") +
cowplot::theme_minimal_grid() +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = 5),
legend.key.width= unit(1.55, 'cm'),
legend.key.height= unit(.1, 'cm'),
legend.margin = margin(b = -10),
legend.justification = "center",
axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
dev.off()
rm(msc, mscworld, world)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr', "gridExtra",
"sf", "rnaturalearth", "rnaturalearthdata",
"ggspatial"
)
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35",
size = .35),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none",
axis.title = element_text(size = 6),
axis.text = element_text(size = 5),
axis.line = element_line(size = .25),
axis.ticks = element_line(size = .25),
strip.text.x = element_text(size = 5),
strip.text.y = element_text(size = 5)
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 6
# download world data
world <- ne_countries(scale = "medium",
returnclass = "sf")
# download msc country data
msc <- read.csv("data/country.n.csv")[, 2:3] %>%
arrange(n) %>%
rename(iso_a3 = country)
# merge datasets
msworld <- left_join(world, msc,
by = 'iso_a3') %>%
mutate(n = ifelse(is.na(n),
0,
n)) %>%
arrange(-n)
# plot data
pdf(file = "output/figures/Figure1.pdf",
width = 3.46,
height = 3.46)
ggplot() +
layer_spatial(data = msworld,
aes(fill = n),
color = NA)+
coord_sf(crs = 'ESRI:54030') +
scale_fill_gradient(low = '#D0CECE',
high = "#820000") +
cowplot::theme_minimal_grid() +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = 5),
legend.key.width= unit(1.55, 'cm'),
legend.key.height= unit(.1, 'cm'),
legend.margin = margin(b = -10),
legend.justification = "center",
axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
dev.off()
rm(msc, mscworld, world)
# Chunk 1
# clear environment
rm(list = ls())
# install (if necessary) and load packages
# function written by stevenworthington
Ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, 'Package'])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# vector of necessary packages
packages <- c('tidyverse', 'ggplot2', 'ggtext', 'metafor',
'ggpubr', "gridExtra",
"sf", "rnaturalearth", "rnaturalearthdata",
"ggspatial"
)
# using vector of packages, call ipak function
Ipak(packages)
# delete vestigial
rm(packages, Ipak)
# turn scientific notation off
options(scipen = 999)
# allow for Type III Sums of Square
options(contrasts = c('contr.sum', 'contr.poly'))
# set plotting options
theme_set(theme_classic() +
theme(strip.background = element_rect(fill = "gray35",
size = .35),
strip.text =element_text(colour = "white"),
panel.border = element_blank(),
legend.position = "none",
axis.title = element_text(size = 6),
axis.text = element_text(size = 5),
axis.line = element_line(size = .25),
axis.ticks = element_line(size = .25),
strip.text.x = element_text(size = 5),
strip.text.y = element_text(size = 5)
)
)
# Chunk 2
DF.w <- readRDS("data/processed/DF.w.rds")
DF.l.full <- readRDS("data/processed/DF.l.full.rds")
DF.l <- readRDS("data/processed/DF.l.rds")
DF.l.inc <- readRDS("data/processed/DF.l.inc.rds")
# Chunk 3
DF.l <- DF.l %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 4
DF.l.full <- DF.l.full %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 5
DF.l.inc <- DF.l.inc %>%
mutate(trial = factor(trial,
levels = c("happy",
"neutr",
"fil.1",
"fil.4")),
trial = recode(trial,
fil.1 = "filler 1",
happy = "happy",
neutr = "neutral",
fil.4 = "filler 2"),
condition = factor(condition,
levels = c("mimicry",
"directd",
"pentask")),
condition = recode(condition,
directd = "voluntary facial action",
mimicry = "facial mimicry",
pentask = "pen-in-mouth"),
image = recode(image,
absentt = "positive stimuli absent",
present = "positive stimuli present")
)
# Chunk 6
# download world data
world <- ne_countries(scale = "medium",
returnclass = "sf")
# download msc country data
msc <- read.csv("data/country.n.csv")[, 2:3] %>%
arrange(n) %>%
rename(iso_a3 = country)
# merge datasets
msworld <- left_join(world, msc,
by = 'iso_a3') %>%
mutate(n = ifelse(is.na(n),
0,
n)) %>%
arrange(-n)
# plot data
pdf(file = "output/figures/Figure1.pdf",
width = 3.46,
height = 3.46)
ggplot() +
layer_spatial(data = msworld,
aes(fill = n),
color = NA)+
coord_sf(crs = 'ESRI:54030') +
scale_fill_gradient(low = '#D0CECE',
high = "#820000") +
cowplot::theme_minimal_grid() +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = 5),
legend.key.width= unit(1.55, 'cm'),
legend.key.height= unit(.1, 'cm'),
legend.margin = margin(b = -10),
legend.justification = "center",
axis.ticks = element_blank(),
axis.ticks.length = unit(0, "pt"),
panel.grid.major = element_line(size = .2))
dev.off()
rm(msc, mscworld, world)
